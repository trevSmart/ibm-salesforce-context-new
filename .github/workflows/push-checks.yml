name: Push checks

on:
  push:
    branches: [ main, master, develop ]

permissions:
  contents: read

jobs:
  forbidden-literal-check:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      with:
        fetch-depth: 0  # Fetch full history to check all changed files

    - name: Check for forbidden literals
      run: |
        FORBIDDEN_LITERAL="caixa"
        echo "üîç Checking for forbidden literal: '$FORBIDDEN_LITERAL'"

        # Get list of changed files in this push
        CHANGED_FILES=$(git diff --name-only "${{ github.event.before }}" "${{ github.sha }}")

        echo "üìÅ Changed files:"
        echo "$CHANGED_FILES"

        # Filter out the pre-commit script itself and other excluded files
        FILTERED_FILES=$(echo "$CHANGED_FILES" | grep -F -v "dev/pre-commit.sh" | grep -F -v ".github/workflows/push-checks.yml" | grep -F -v ".github/workflows/pr-checks.yml" || echo "")

        if [ -n "$FILTERED_FILES" ]; then
          echo "üîé Checking filtered files for forbidden literal..."

          # Check each file individually to handle spaces in filenames
          FOUND_FORBIDDEN=false
          VIOLATIONS=""

          while IFS= read -r file; do
            if [ -n "$file" ] && [ -f "$file" ]; then
              if grep -H -n -E -i "$FORBIDDEN_LITERAL" "$file" > /dev/null 2>&1; then
                FOUND_FORBIDDEN=true
                VIOLATIONS="${VIOLATIONS}$(grep -H -n -E -i "$FORBIDDEN_LITERAL" "$file")\n"
              fi
            fi
          done <<< "$FILTERED_FILES"

          if [ "$FOUND_FORBIDDEN" = true ]; then
            echo "‚ùå Forbidden literal '$FORBIDDEN_LITERAL' found in the following files:"
            echo -e "$VIOLATIONS"
            echo ""
            echo "üö´ Push blocked due to forbidden content."
            echo "Please remove the forbidden literal and try again."
            exit 1
          else
            echo "‚úÖ No forbidden literals found in changed files"
          fi
        else
          echo "‚ÑπÔ∏è No files to check (all changed files are excluded)"
        fi

  lint:
    runs-on: ubuntu-latest
    needs: [forbidden-literal-check]

    strategy:
      matrix:
        node-version: [22.17.1]

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v6
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run linting
      run: npm run lint:fix

  security:
    runs-on: ubuntu-latest
    needs: [forbidden-literal-check, lint]

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Setup Node.js
      uses: actions/setup-node@v6
      with:
        node-version: '22.17.1'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run security audit
      run: |
        # Run audit and capture output and exit code
        set +e  # Don't exit on error
        audit_output=$(npm audit --audit-level=high 2>&1)
        audit_exit_code=$?
        set -e  # Re-enable exit on error

        # If audit fails, check if it's due to known external vulnerabilities
        if [ $audit_exit_code -ne 0 ]; then
          echo "Security audit found vulnerabilities. Checking if they are external dependencies..."

          # Check if vulnerabilities are only in @salesforce/cli transitive dependencies
          cli_vulns=$(echo "$audit_output" | grep "node_modules/@salesforce/cli" | wc -l | tr -d ' ')
          if [ "$cli_vulns" -gt 0 ]; then
            echo "‚úÖ Vulnerabilities are in external @salesforce/cli dependencies (see SECURITY.md)"
            echo "These do not affect the security of this project."
            exit 0
          else
            echo "‚ùå Found vulnerabilities in project dependencies that need attention"
            echo "$audit_output"
            exit $audit_exit_code
          fi
        else
          echo "‚úÖ No high severity vulnerabilities found"
        fi

    - name: Check for outdated dependencies
      run: npm outdated || true